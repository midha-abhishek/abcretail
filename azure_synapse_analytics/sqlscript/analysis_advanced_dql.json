{
	"name": "analysis_advanced_dql",
	"properties": {
		"content": {
			"query": "-- Top 5 Products by Total Sales Revenue\n\nSELECT TOP 5 p.Name AS ProductName, \n    SUM(sod.LineTotal) AS TotalRevenue,\n    COUNT(DISTINCT soh.SalesOrderID) AS NumberOfSales\nFROM [azsqldb_Product] p\nJOIN [azsqldb_SalesOrderDetail] sod ON p.ProductID = sod.ProductID\nJOIN [azsqldb_SalesOrderHeader] soh ON sod.SalesOrderID = soh.SalesOrderID\nWHERE soh.Status = 5  -- 5 indicates completed orders\nGROUP BY p.Name\nORDER BY TotalRevenue DESC;\n\n\n\n-- Monthly Sales Analysis\n\nSELECT YEAR(soh.OrderDate) AS SalesYear,\n    MONTH(soh.OrderDate) AS SalesMonth,\n    COUNT(DISTINCT soh.SalesOrderID) AS NumberOfOrders,\n    SUM(soh.TotalDue) AS TotalSales\nFROM [azsqldb_SalesOrderHeader] soh\nWHERE soh.OrderDate IS NOT NULL\nGROUP BY YEAR(soh.OrderDate), MONTH(soh.OrderDate)\nORDER BY SalesYear, SalesMonth;\n\n\n\n-- Top Customers by Total Spending\n\nSELECT TOP 10 c.CustomerID, \n    c.FirstName, \n    c.LastName, \n    SUM(soh.TotalDue) AS TotalSpent\nFROM [azsqldb_Customer] c\nJOIN [azsqldb_SalesOrderHeader] soh ON c.CustomerID = soh.CustomerID\nWHERE soh.Status = 5\nGROUP BY c.CustomerID, c.FirstName, c.LastName\nORDER BY TotalSpent DESC;\n\n\n\n-- Products with High Discounts\n\nSELECT p.Name AS ProductName,\n    AVG(sod.UnitPriceDiscount) AS AvgDiscount,\n    AVG(sod.UnitPrice) AS AvgUnitPrice,\n    (AVG(sod.UnitPriceDiscount) / AVG(sod.UnitPrice)) * 100 AS DiscountPercentage\nFROM [azsqldb_Product] p\nJOIN [azsqldb_SalesOrderDetail] sod ON p.ProductID = sod.ProductID\nGROUP BY p.Name\nHAVING (AVG(sod.UnitPriceDiscount)) > 0.20 -- Unit price discount above 20%\nORDER BY DiscountPercentage DESC;\n\n\n\n-- Customer Purchase Patterns\n\n-- Average Number of Products Purchased Per Customer Per Order\n\nSELECT c.CustomerID,\n    c.FirstName,\n    c.LastName,\n    AVG(sod.OrderQty) AS AvgProductsPerOrder\nFROM [azsqldb_Customer] c\nJOIN [azsqldb_SalesOrderHeader] soh ON c.CustomerID = soh.CustomerID\nJOIN [azsqldb_SalesOrderDetail] sod ON soh.SalesOrderID = sod.SalesOrderID\nWHERE soh.Status = 5  -- 5 indicates completed orders\nGROUP BY c.CustomerID, c.FirstName, c.LastName\nORDER BY AvgProductsPerOrder DESC;\n\n\n\n-- Product Availability Analaysis\n\n-- Number of Products Out of Stock or Discontinued\n\nSELECT COUNT(*) AS OutOfStockProducts,\n    SUM(CASE WHEN p.DiscontinuedDate IS NOT NULL THEN 1 ELSE 0 END) AS DiscontinuedProducts\nFROM [azsqldb_Product] p\nWHERE p.SellEndDate < GETDATE() OR p.DiscontinuedDate IS NOT NULL;\n\n\n\n-- Customer Retention Analysis\n\n-- Customers Who Have Placed More Than 5 Orders\n-- Currently There are None\n\nSELECT c.CustomerID,\n    c.FirstName,\n    c.LastName,\n    COUNT(soh.SalesOrderID) AS TotalOrders\nFROM [azsqldb_Customer] c\nJOIN [azsqldb_SalesOrderHeader] soh ON c.CustomerID = soh.CustomerID\nGROUP BY c.CustomerID, c.FirstName, c.LastName\nHAVING COUNT(soh.SalesOrderID) > 5\nORDER BY TotalOrders DESC;\n\n\n\n-- Running Total Sales Over Time\n\nSELECT soh.OrderDate, \n       SUM(soh.TotalDue) OVER (ORDER BY soh.OrderDate) AS RunningTotalSales\nFROM [azsqldb_SalesOrderHeader] soh\nWHERE soh.OrderDate IS NOT NULL\nORDER BY soh.OrderDate;\n\n\n\n-- Year-Over-Year Sales Growth\n\nWITH SalesByYear AS (\n    SELECT YEAR(OrderDate) AS SalesYear, \n        SUM(TotalDue) AS TotalSales\n    FROM [azsqldb_SalesOrderHeader]\n    WHERE OrderDate IS NOT NULL\n    GROUP BY YEAR(OrderDate)\n)\nSELECT SalesYear, \n    TotalSales, \n    LAG(TotalSales, 1) OVER (ORDER BY SalesYear) AS LastYearSales,\n    ((TotalSales - LAG(TotalSales, 1) OVER (ORDER BY SalesYear)) / LAG(TotalSales, 1) OVER (ORDER BY SalesYear)) * 100 AS SalesGrowthPercentage\nFROM SalesByYear\nORDER BY SalesYear;\n\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "abcretail_serverless_sqldb",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}